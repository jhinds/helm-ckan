apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ckan.fullname" . }}
  labels:
    app: {{ template "ckan.name" . }}
    chart: {{ template "ckan.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ckan.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ckan.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: ckan
          image: "{{ .Values.image.ckan.repository }}:{{ .Values.image.ckan.tag }}"
          imagePullPolicy: {{ .Values.image.ckan.pullPolicy }}
          command: {{ .Values.image.ckan.command | toJson }}
          ports:
            - containerPort: {{ .Values.image.ckan.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.image.ckan.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
          - name: CKAN_SOLR_URL
            value: {{ .Values.environment.ckan.CKAN_SOLR_URL }}:{{ .Values.image.solr.port }}/{{ .Values.image.solr.ckanUrlPath }}
          - name: CKAN_REDIS_URL
            value: {{ .Values.environment.ckan.CKAN_REDIS_URL }}:{{ .Values.image.redis.port }}
          - name: CKAN_SITE_URL
            value: {{ .Values.environment.ckan.CKAN_SITE_URL }}
            # this is the config file that ckan will be using
          - name: CUSTOMER_CONFIG
            value: {{ .Values.environment.ckan.CUSTOMER_CONFIG }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: ckan-config
            mountPath: {{ .Values.volumes.mountPath }}
          - name: ckan-apache-config
            mountPath: /etc/apache2/sites-available
{{ if .Values.persistentVolume.nfs.enabled }}
          - name: ckan-data
            mountPath: /data/ckan
{{ end }}

        - name: solr
          image: "{{ .Values.image.solr.repository }}:{{ .Values.image.solr.tag }}"
          imagePullPolicy: {{ .Values.image.solr.pullPolicy }}
          ports:
            - containerPort: {{ .Values.image.solr.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}

{{ if .Values.image.postgres.local }}
        - name: postgres
          image: "{{ .Values.image.postgres.repository }}:{{ .Values.image.postgres.tag }}"
          imagePullPolicy: {{ .Values.image.postgres.pullPolicy }}
          ports:
            - containerPort: {{ .Values.image.postgres.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
          - name: POSTGRES_DB
            value: {{ .Values.environment.postgres.POSTGRES_DB }}
          - name: POSTGRES_USER
            value: {{ .Values.environment.postgres.POSTGRES_USER }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.environment.postgres.POSTGRES_PASSWORD }}
{{ end }}

        - name: redis
          image: "{{ .Values.image.redis.repository }}:{{ .Values.image.redis.tag }}"
          imagePullPolicy: {{ .Values.image.redis.pullPolicy }}
          ports:
            - containerPort: {{ .Values.image.redis.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: ckan-config
          configMap:
            name: {{ .Values.volumes.ckanConfigMap }}
        - name: who-ini-config
          configMap:
            name: {{ .Values.volumes.ckanConfigMap }}
            items:
            - key: who.ini
              path: who.ini
{{ if .Values.persistentVolume.nfs.enabled }}
        - name: ckan-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}
{{ end }}
